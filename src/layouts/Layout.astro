---
import "@unocss/reset/tailwind-compat.css";
import "ðŸ’…/theme.css";
import "ðŸ’…/fonts.css";
import "ðŸ’…/links.css";
import "ðŸ’…/article.css";
import BaseHead, { type Props as BaseHeadProps } from "ðŸ§±/BaseHead.astro";

export interface Props extends BaseHeadProps {
  class?: string;
  style?: string;
}

const { class: className, style, ...rest } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead {...rest}>
      <slot name="head" slot="head" />
    </BaseHead>
  </head>
  <body style={style} class="overflow-x-hidden">
    <script is:inline>
      0;
    </script>
    <div
      class:list={[
        "overflow-hidden h-full flex bg-body-900 color-text-800 transition-colors",
        className,
      ]}
    >
      <div class="overlay z-0"></div>
      <div class="flex flex-col items-center w-full z-1">
        <slot />
      </div>
    </div>
    <style is:global transition:persist>
      * {
        word-break: break-word;
      }
      .prose
        :where(:not(pre) > code):not(:where(.not-prose, .not-prose *))::before,
      .prose
        :where(:not(pre) > code):not(:where(.not-prose, .not-prose *))::after {
        content: "";
      }
      .prose
        :where(:not(pre) > code):not(
          :where(.astro-code, .not-prose, .not-prose *)
        ) {
        padding: 0 8px;
        border-radius: 4px;
        background: var(--inline-code);
      }

      @media only screen and (min-width: 768px) {
        code {
          counter-reset: step;
          counter-increment: step 0;
        }

        code .line::before {
          content: counter(step);
          counter-increment: step;
          width: 1rem;
          margin-right: 1.5rem;
          display: inline-flex;
          white-space: nowrap;
          text-align: right;
          color: var(--astro-code-token-comment);
        }
      }

      .overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        stroke: var(--grid-color);
        -webkit-mask-image: linear-gradient(0deg, transparent, black);
        background-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32' width='32' height='32' fill='none' stroke='rgb(148 163 184 / 0.05)'><path d='M0 .5H31.5V32'/></svg>");
        transform: skew(var(--skew, 0deg)) rotate(var(--rotate, 0deg))
          scale(var(--scale, 1));
        transition: all 1s;
      }

      code,
      pre {
        font-family:
          ui-monospace,
          "Jetbrains Mono",
          Menlo,
          Monaco,
          Lucida Console,
          Liberation Mono,
          DejaVu Sans Mono,
          Bitstream Vera Sans Mono,
          Courier New,
          monospace !important;
      }
      iframe {
        max-width: 100%;
      }
    </style>
  </body>
</html>
